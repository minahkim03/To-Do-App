{"ast":null,"code":"var _jsxFileName = \"/Users/minah/Desktop/project/homework/toypj/todo/src/component/List.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport React, { useState } from \"react\";\nimport { Route, Routes, useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const handleTaskInputChange = event => {\n    setTaskText(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (taskText.trim() !== \"\") {\n      setTasks([...tasks, {\n        text: taskText,\n        completed: false\n      }]);\n      setTaskText(\"\");\n    }\n  };\n  const handleTaskCheckboxChange = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  const getList = () => {\n    axios.get(\"http://localhost:8080/getList\").then(res => {\n      let copy = [...tasks];\n      setTasks(copy);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: 50,\n        fontSize: 100\n      },\n      children: \" Ho-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/add\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleTaskInputChange,\n          placeholder: \"Enter a task...\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"button\",\n          style: {\n            width: 100,\n            height: 90,\n            marginLeft: 10,\n            fontSize: 30\n          },\n          type: \"submit\",\n          onClick: handleAddTask,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"taskList\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? \"completed\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => handleTaskCheckboxChange(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"pAV3jtnv0eTf0ebthC6Q0kATuEw=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Nav","Navbar","Container","React","useState","Route","Routes","useNavigate","useParams","jsxDEV","_jsxDEV","List","_s","useEffect","fetchData","tasks","setTasks","taskText","setTaskText","handleTaskInputChange","event","target","value","handleAddTask","trim","text","completed","handleTaskCheckboxChange","index","updatedTasks","getList","axios","get","then","res","copy","catch","err","console","log","className","children","style","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","action","method","type","onChange","placeholder","name","class","width","height","marginLeft","onClick","id","map","task","checked","_c","$RefreshReg$"],"sources":["/Users/minah/Desktop/project/homework/toypj/todo/src/component/List.js"],"sourcesContent":["import '../App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Nav, Navbar, Container} from 'react-bootstrap'\nimport React, { useState } from \"react\";\nimport {Route, Routes, useNavigate, useParams} from 'react-router-dom'\n\nfunction List(){\n    useEffect(() => {\n        fetchData();\n    }, []);\n    const [tasks, setTasks] = useState([]);\n    const [taskText, setTaskText] = useState(\"\");\n    const handleTaskInputChange = (event) => {\n        setTaskText(event.target.value);\n    };\n\n    const handleAddTask = () => {\n        if (taskText.trim() !== \"\") {\n        setTasks([...tasks, { text: taskText, completed: false }]);\n        setTaskText(\"\");\n        }\n    };\n\n    const handleTaskCheckboxChange = (index) => {\n        const updatedTasks = [...tasks];\n        updatedTasks[index].completed = !updatedTasks[index].completed;\n        setTasks(updatedTasks);\n    };\n\n    \n    const getList=()=>{\n        axios.get(\"http://localhost:8080/getList\")\n        .then((res) => {\n        let copy = [...tasks];\n        setTasks(copy);\n        })\n        .catch((err) => {\n        console.log(err);\n        });\n    };\n\n    return (\n        <div className=\"todo-container\">\n        <h1 style = {{marginTop: 50, fontSize : 100}}> Ho-Do List</h1>\n        <div style={{textAlign : \"center\",  marginTop: 50}}>\n            <form action='/add' method='POST'>\n            <input\n            type=\"text\"\n            onChange={handleTaskInputChange}\n            placeholder=\"Enter a task...\"\n            name='title'\n            />\n            <button class = 'button' style = {{width:100, height:90, marginLeft:10, fontSize:30}} type = 'submit' onClick={handleAddTask}>Add</button>\n            </form>\n        </div>\n        <ul id=\"taskList\">\n            {tasks.map((task, index) => (\n            <li\n                key={index}\n                className={task.completed ? \"completed\" : \"\"}\n            >\n                <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => handleTaskCheckboxChange(index)}\n                />\n                <span>{task.text}</span>\n            </li>\n            ))}\n        </ul>\n        </div>\n    );\n}\n\nexport default List"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}